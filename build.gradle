
plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.23",
    selenideVersion = "6.13.0",
    restAssuredVersion = "5.3.0",
    allureVersion = "2.27.0",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:1.0.12"
    )
}

tasks.withType(Test){
    systemProperties(System.getProperties())
    useJUnitPlatform()
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task ios_tests(type:Test){
    useJUnitPlatform(){
        includeTags("IOS")
    }
}
task android_tests(type:Test){
    useJUnitPlatform(){
        includeTags("Android")
    }
}

test {
    useJUnitPlatform {
        if (project.hasProperty("includeTags")) {
            includeTags(project.property("includeTags") as String)
        }
    }
}
